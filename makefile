#   Makefile generated by Keil2GCC converter (c)2018 Ondrej Sterba.
# 
# GENERATED MAKEFILE IS PROVIDED "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.
#/

PROJECT = STM32F103_BLUEPILL

CC	= arm-none-eabi-gcc
CPP	= arm-none-eabi-g++
AS	= arm-none-eabi-as
LD	= arm-none-eabi-g++
CP	= arm-none-eabi-objcopy
OS	= arm-none-eabi-size
OD	= arm-none-eabi-objdump

VECTOR	= gcc_startupfile_stm32f103c8.s

LDSCRIPT = ./gcc_linkerfile_stm32f103c8.ld
LDFLAGS  = -mcpu=cortex-m3 -mthumb -mfloat-abi=soft -T$(LDSCRIPT) -lnosys -Wl,--gc-sections -Wl,-Map,$(PROJECT).map

INC = -I./CMSIS-DAP\
      -I:/Keil/ARM/PACK/ARM/CMSIS/5.3.0/CMSIS/Core/Include\
      -I:/Keil/ARM/PACK/ARM/CMSIS/5.3.0/CMSIS/Driver/Include\
      -I:/Keil/ARM/PACK/ARM/CMSIS/5.3.0/CMSIS/Include\
      -I./Driver/STM32F10x_ARM_Driver\
      -I./Driver/STM32F10x_StdPeriph_Driver/inc\
      -I./USB\
      -I./User\

SRC = $(VECTOR) \
      ./CMSIS-DAP/DAP.c\
      ./CMSIS-DAP/JTAG_DP.c\
      ./CMSIS-DAP/SWO.c\
      ./CMSIS-DAP/SW_DP.c\
      ./Driver/STM32F10x_ARM_Driver/DMA_STM32F10x.c\
      ./Driver/STM32F10x_ARM_Driver/GPIO_STM32F10x.c\
      ./Driver/STM32F10x_ARM_Driver/USART_STM32F10x.c\
      ./Driver/STM32F10x_StdPeriph_Driver/src/misc.c\
      ./Driver/STM32F10x_StdPeriph_Driver/src/stm32f10x_flash.c\
      ./Driver/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c\
      ./Driver/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c\
      ./USB/usb_config.c\
      ./USB/usbd_STM32F103.c\
      ./USB/usbd_user_cdc_acm.c\
      ./USB/usbd_user_hid.c\
      ./User/main.c\
      ./User/system_stm32f10x.c\

#  C++ source files
CPPFILES = $(filter %.cpp, $(SRC))
#  C source files
CFILES = $(filter %.c, $(SRC))
#  Assembly source files
ASMFILES = $(filter %.s, $(SRC))

# Object files
CPPOBJ = $(CPPFILES:.cpp=.o)
COBJ = $(CFILES:.c=.o)
SOBJ = $(ASMFILES:.s=.o)
OBJ  = $(CPPOBJ) $(COBJ) $(SOBJ)

# Compile thumb for cortex-m3 with debug info
CPPFLAGS  = -g -mthumb -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DBLUEPILL -DSWO_PB7 -mcpu=cortex-m3 -mfloat-abi=soft -Og -fpack-struct -fdata-sections -ffunction-sections -fno-exceptions -fno-rtti -std=c++11
CFLAGS  = -g -mthumb -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DBLUEPILL -DSWO_PB7 -mcpu=cortex-m3 -mfloat-abi=soft -Og -fpack-struct -fdata-sections -ffunction-sections -std=c99
ASFLAGS = -g -mthumb -mcpu=cortex-m3


all: $(SRC) $(PROJECT).elf $(PROJECT).hex $(PROJECT).bin

$(PROJECT).bin: $(PROJECT).elf
	@$(CP) -O binary $(PROJECT).elf $@

$(PROJECT).hex: $(PROJECT).elf
	@$(CP) -O ihex $(PROJECT).elf $@

$(PROJECT).elf: $(OBJ)
	@echo Linking
	@$(LD) $(LDFLAGS) $(OBJ) -o $@
	@$(OS) -t $(PROJECT).elf


$(CPPOBJ): %.o: %.cpp
	@echo $<
	@$(CPP) -c $(INC) $(CPPFLAGS) $< -o $@

$(COBJ): %.o: %.c
	@echo $<
	@$(CC) -c $(INC) $(CFLAGS) $< -o $@

$(SOBJ): %.o: %.s
	@echo $<
	@$(AS) -c $(ASFLAGS) $< -o $@

clean:
	@rm -f $(PROJECT).elf $(PROJECT).bin $(PROJECT).map $(PROJECT).hex $(PROJECT).lss $(OBJ)

install: $(PROJECT).bin
	JLink.exe -device STM32F103C8 -CommanderScript ./flash.jlink
